package motorPh;

import java.io.BufferedReader;
import java.io.FileReader;
import java.text.NumberFormat;

public class GovernmentDeductions {

	public static void main(String[] args) {
		
		String file = "src\\motorPH\\Employee Details.csv";
		BufferedReader reader = null;
		String line = "";
		int basicSalary; 
		double sssContribution, philhealthContribution, pagibigContibution, taxableIncome, withholdingTax;
		
		try {
			reader = new BufferedReader(new FileReader(file));
			while((line = reader.readLine()) != null) {
				
				String[] row = line.split(",");
				
				System.out.println("Employee Number: " + row[0]);
				System.out.println("Last Name: " + row[1]);
				System.out.println("First Name: " + row[2]);
				
				basicSalary = Integer.parseInt(row[16]);
				
			    NumberFormat formatter = NumberFormat.getInstance();
			    String formattedNumber = formatter.format(basicSalary);
				
				System.out.println("Basic salary: ₱" + formattedNumber);
				
				
				sssContribution = SSSContribution(basicSalary);
				philhealthContribution = PhilHealthContribution(basicSalary);
				pagibigContibution = PagIbigContribution(basicSalary);
				
				taxableIncome = basicSalary - (sssContribution + philhealthContribution + pagibigContibution); 
				
				withholdingTax = WithholdingtaxCalculation(taxableIncome);
				
				System.out.println("SSS Contribution: ₱" + sssContribution);
				System.out.println("PhilHealth Contribution: ₱" + philhealthContribution);
				System.out.println("Pag Ibig Contribution: ₱" + pagibigContibution);
				System.out.println("Taxable Income: ₱" + taxableIncome);
				System.out.println("Withholding Tax: ₱" + withholdingTax);
				System.out.println("------------------------------");
				
				
			}
		}
		
		catch(Exception e) {
			
		}

	}

	
	static double SSSContribution(int arg1) {
	
		double bracketRange = 499.99, baseBracket = 3250, contributionIterate = 22.5;
		double maxBracket = baseBracket + bracketRange , minBracket = baseBracket;
		double contributionAmount = 135;
		
		for (int i = 1 ; i <= 42 ; i++) {
			if (arg1 <= baseBracket) {
				return 135;
			} else if (arg1 >= minBracket && arg1 <= maxBracket ) {
				contributionAmount = contributionAmount + contributionIterate;
				return contributionAmount;
			}
			minBracket = maxBracket;
			maxBracket = maxBracket + bracketRange;
		}
		return 1125;
	}
	
	static double PhilHealthContribution(int arg1) {
		
		return (arg1 * 0.03) * 0.5;
		
	}
	
	static double PagIbigContribution(int arg1) {
		
	    if (arg1 < 1000) {
	        	return 0;
	      } else if (arg1 >= 1000 && arg1 <= 1500) {
	    	  return arg1 * .01;
	      } else {
	    	  if(arg1 * .02 < 100) {
	    		  return arg1 * .02;
	    	  } else {
	    		  return 100;
	    	  }
	      }
		
	}
	
	static double WithholdingtaxCalculation(double arg1) {
		
		 if (arg1 <= 20832) {
		      return 0;
		    } else if (arg1 >= 20833 && arg1 < 33333) {
		    	return (arg1 - 20833) * 0.2;
		    } else if (arg1  >= 33333 && arg1 < 66667) {
		    	return (arg1 - 33333) * 0.25 + 2500;
		    } else if (arg1  >= 66667 && arg1 < 166667) {
		    	return (arg1 - 66667) * 0.3 + 10833;
		    } else if (arg1  >= 166667 && arg1 < 666667) {
		    	return (arg1 - 166667) * 0.32 + 40833.33;
		    } else {
		    	return (arg1 - 666667) * 0.35 + 200833.33;
		    }
		
	}
}

